// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231112135106_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.CarBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CarBrandId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("CarBrands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Name = "BMW"
                        },
                        new
                        {
                            Id = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Name = "LADA"
                        });
                });

            modelBuilder.Entity("Entities.Models.CarModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CarModelId");

                    b.Property<Guid>("CarBrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            CarBrandId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Name = "M5"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            CarBrandId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            Name = "X5"
                        },
                        new
                        {
                            Id = new Guid("8fc9bc40-e533-48fb-bb6f-2f5e6ac69a25"),
                            CarBrandId = new Guid("86dba8c0-d178-41e7-938c-ed49778fb52a"),
                            Name = "2114"
                        });
                });

            modelBuilder.Entity("Entities.Models.Lot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LotId");

                    b.Property<Guid>("CarBrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Millage")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lots");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa13d0ca-01d9-4c22-af18-b67b6f7294f5"),
                            CarBrandId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            CarModelId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Color = "Black",
                            Millage = 300000,
                            PostDate = new DateTime(2023, 11, 12, 16, 51, 5, 873, DateTimeKind.Local).AddTicks(5255),
                            PostTime = new DateTime(2023, 11, 12, 16, 51, 5, 873, DateTimeKind.Local).AddTicks(5265),
                            ReleaseYear = 1999
                        },
                        new
                        {
                            Id = new Guid("9305c851-de77-4039-b600-5a0413591c3f"),
                            CarBrandId = new Guid("80abbca8-664d-4b20-b5de-024705497d4a"),
                            CarModelId = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Color = "White",
                            Millage = 199213,
                            PostDate = new DateTime(2023, 11, 12, 16, 51, 5, 873, DateTimeKind.Local).AddTicks(5270),
                            PostTime = new DateTime(2023, 11, 12, 16, 51, 5, 873, DateTimeKind.Local).AddTicks(5271),
                            ReleaseYear = 2005
                        });
                });

            modelBuilder.Entity("Entities.Models.CarModel", b =>
                {
                    b.HasOne("Entities.Models.CarBrand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Entities.Models.CarBrand", b =>
                {
                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
